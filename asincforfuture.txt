async def some_function():
    
    entries = r.zcard(my_id)
    await asyncio.sleep(1)
    new_entries = r.zcard(my_id)
    if new_entries != entries:
        print('New entry')
        entries = new_entries
        try:
            req = requests.post('http://127.0.0.1:8000/', json = {'new_entry': 'new_reddis_entry'})
            response = req.json()
            print(req.json())
        except Exception as e:
            print(e)

async def some_other_function():
    await asyncio.sleep(1)
    print('Request1')
    await asyncio.sleep(2)
    print('Request2')

async def forever():
    print('Starting server')
    await start_server()
    print('After server')
    while True:
        await asyncio.gather(some_function())
        #await some_other_function()


if new_user:
        await redis.hset(str(user_id), 'tasks', 1)
        await redis.zadd(str(user_id), int(time), task)
    else:
        task_number = await redis.hincrby(str(user_id), 'tasks', 1)
        await redis.zadd(str(user_id), int(time), task)
    redis.close()
    await redis.wait_closed()